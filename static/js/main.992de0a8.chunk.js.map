{"version":3,"sources":["logo.svg","SortingAlgorithm/SortingAlgorithm.js","SortingAlgorithm/QuickSort.js","SortingAlgorithm/BubbleSort.js","SortingAlgorithm/HeapSort.js","SortingVisualizer/UserInput.jsx","SortingVisualizer/CompareVisualizer.jsx","SortingVisualizer/GetJumbotron.jsx","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","quickSortHelper","left","right","partition","pivot","p","a","partitionFunc","getBubbleSortAnimations","n","bubbleSortHelper","getHeapSortAnimations","heapify","heapSortHelper","console","log","largest","l","r","b","UserInput","props","state","value","handleChange","bind","handleSubmit","event","this","setState","target","replace","split","map","Number","user","preventDefault","Modal","size","aria-labelledby","centered","Header","closeButton","style","backgroundColor","border","Title","id","marginTop","onSubmit","Body","type","width","height","onChange","Footer","borderRadius","padding","background","onClick","onHide","React","Component","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","PIVOTCOLOR","CompareVisualizer","modalshow","userip","compare","array1","array2","array3","array4","narraybars","theme","modalShowtoggle","modalHidetoggle","startCompare","handleSpeedChange","themechange","resetArray","th","randomIntFromInterval","window","innerHeight","arrayy","animations1","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","animations2","pivotidx","pivotidxStyle","new1height","new2height","animations3","javaScriptSortedArray","sort","mergeSortedArray","arraysAreEqual","mergeSort","quickSort","heapSort","bubbleSort","parseInt","documentElement","y","getElementsByTagName","borderColor","getElementById","className","margin","idx","t","comparealgo","display","min","max","show","random","arrayOne","arrayTwo","SetJumbotron","Jumbotron","href","src","alt","SortingVisualizer","sarray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sOAAe,I,kDCAR,SAASA,EAAuBC,GACnC,IAAMC,EAAa,GACnB,GAAID,EAAME,QAAU,EAAG,OAAOF,EAC9B,IAAMG,EAAiBH,EAAMI,QAE7B,OADAC,EAAgBL,EAAO,EAAGA,EAAME,OAAS,EAAGC,EAAgBF,GACrDA,EAGT,SAASI,EACPC,EACAC,EACAC,EACAL,EACAF,GAEA,GAAIM,IAAaC,EAAjB,CACA,IAAMC,EAAYC,KAAKC,OAAOJ,EAAWC,GAAU,GACnDH,EAAgBF,EAAgBI,EAAUE,EAAWH,EAAWL,GAChEI,EAAgBF,EAAgBM,EAAY,EAAGD,EAAQF,EAAWL,GAIpE,SACEK,EACAC,EACAE,EACAD,EACAL,EACAF,GAEA,IAAIW,EAAIL,EACJM,EAAIN,EACJO,EAAIL,EAAY,EACpB,KAAOI,GAAKJ,GAAaK,GAAKN,GAG5BP,EAAWc,KAAK,CAACF,EAAGC,IAGpBb,EAAWc,KAAK,CAACF,EAAGC,IAChBX,EAAeU,IAAMV,EAAeW,IAGtCb,EAAWc,KAAK,CAACH,EAAGT,EAAeU,KACnCP,EAAUM,KAAOT,EAAeU,OAIhCZ,EAAWc,KAAK,CAACH,EAAGT,EAAeW,KACnCR,EAAUM,KAAOT,EAAeW,MAGpC,KAAOD,GAAKJ,GAGVR,EAAWc,KAAK,CAACF,EAAGA,IAGpBZ,EAAWc,KAAK,CAACF,EAAGA,IAGpBZ,EAAWc,KAAK,CAACH,EAAGT,EAAeU,KACnCP,EAAUM,KAAOT,EAAeU,KAElC,KAAOC,GAAKN,GAGVP,EAAWc,KAAK,CAACD,EAAGA,IAGpBb,EAAWc,KAAK,CAACD,EAAGA,IAGpBb,EAAWc,KAAK,CAACH,EAAGT,EAAeW,KACnCR,EAAUM,KAAOT,EAAeW,KAvDlCE,CAAQV,EAAWC,EAAUE,EAAWD,EAAQL,EAAgBF,ICnB7D,SAASgB,EAAuBjB,GACnC,IAAMC,EAAW,GACjB,OAAGD,EAAME,QAAU,EAAUF,GAC7BkB,EAAgBlB,EAAO,EAAGA,EAAME,OAAO,EAAGD,GACnCA,GAGX,SAASiB,EAAgBlB,EAAMmB,EAAKC,EAAMnB,GACtC,KAAGmB,EAAMD,GAAQ,GAAjB,CAEI,IACIE,EAMZ,SAAuBrB,EAAOmB,EAAMC,EAAOE,EAAOrB,GAG9C,IAAIY,EAAKM,EAAO,EACZL,EAAIK,EACJI,EAAE,EACN,IAAKT,EAAIK,EAAML,GAAKM,EAAO,EAAGN,IAC9B,CAMI,GAJAb,EAAWc,KAAK,CAACF,EAAE,EAAEC,EAAEM,IAEvBG,EAAIV,EAAE,EAEFb,EAAMc,GAAKQ,EACf,CAEI,IAAIE,EAAIxB,IADRa,GAEAb,EAAMa,GAAKb,EAAMc,GACjBd,EAAMc,GAAKU,EACXvB,EAAWc,KAAK,CAACF,EAAGC,EAAGd,EAAMc,GAAId,EAAMa,UAGtCZ,EAAWc,KAAK,IACrBd,EAAWc,KAAK,CAACQ,EAAET,EAAEM,IAEzB,IAAII,EAAIxB,EAAMa,EAAI,GAQlB,OAPAb,EAAMa,EAAE,GAAKb,EAAMoB,GACnBpB,EAAMoB,GAASI,EACfvB,EAAWc,KAAK,CAACF,EAAE,EAAGA,EAAE,EAAGO,IAC3BnB,EAAWc,KAAK,CAACF,EAAE,EAAGO,EAAOpB,EAAMoB,GAAQpB,EAAMa,EAAE,KACnDZ,EAAWc,KAAK,CAACF,EAAE,EAAGA,EAAE,EAAGO,IAGnBP,EAAI,EAvCMY,CAAczB,EAAOmB,EAAMC,EAD/BpB,EAAMoB,GACuCnB,GACvDiB,EAAgBlB,EAAOmB,EAAME,EAAU,EAAGpB,GAC1CiB,EAAgBlB,EAAOqB,EAAU,EAAGD,EAAOnB,ICb5C,SAASyB,EAAwB1B,GACpC,IAAMC,EAAW,GACjB,OAAGD,EAAME,QAAU,EAAUF,GAKjC,SAA0BA,EAAO2B,EAAG1B,GAChC,IAAIY,EAAE,EACFC,EAAE,EAEN,IAAKD,EAAI,EAAGA,EAAIc,EAAE,EAAGd,IAEjB,IAAKC,EAAI,EAAGA,EAAIa,EAAEd,EAAE,EAAGC,IACvB,CAGI,GAFAb,EAAWc,KAAK,CAACD,EAAEA,EAAE,IAEjBd,EAAMc,GAAKd,EAAMc,EAAE,GACvB,CACI,IAAIU,EAAExB,EAAMc,GACZd,EAAMc,GAAGd,EAAMc,EAAE,GACjBd,EAAMc,EAAE,GAAGU,EACXvB,EAAWc,KAAK,CAACD,EAAEA,EAAE,EAAEd,EAAMc,EAAE,GAAGd,EAAMc,UAEvCb,EAAWc,KAAK,IAErBd,EAAWc,KAAK,CAACD,EAAEA,EAAE,KAvB7Bc,CAAiB5B,EAAOA,EAAME,OAAQD,GAC/BA,GCJJ,SAAS4B,EAAsB7B,GAClC,IAAMC,EAAW,GACjB,OAAGD,EAAME,QAAU,EAAUF,GAMjC,SAAwBA,EAAOC,GAC3B,IAAIY,EACAc,EAAE3B,EAAME,OACZ,IAAKW,EAAIc,EAAI,EAAI,EAAGd,GAAK,EAAGA,IACxBiB,EAAQ9B,EAAOA,EAAME,OAAQW,EAAGZ,GAGpC,IAAKY,EAAIc,EAAI,EAAGd,EAAI,EAAGA,IAAK,CAExBZ,EAAWc,KAAK,CAAC,EAAGF,IACpB,IAAIW,EAAExB,EAAM,GACZA,EAAM,GAAGA,EAAMa,GACfb,EAAMa,GAAGW,EACTvB,EAAWc,KAAK,CAAC,EAAGF,EAAGb,EAAMa,GAAIb,EAAM,KACvCC,EAAWc,KAAK,CAAC,EAAGF,IAGpBiB,EAAQ9B,EAAOa,EAAG,EAAGZ,IAtBzB8B,CAAe/B,EAAOC,GACtB+B,QAAQC,IAAIjC,GACLC,GAwBX,SAAS6B,EAAQ9B,EAAO2B,EAAGd,EAAEZ,GAEzB,IAAIiC,EAAUrB,EACVsB,EAAI,EAAItB,EAAI,EACZuB,EAAI,EAAIvB,EAAI,EAWhB,GARIsB,EAAIR,GAAK3B,EAAMmC,GAAKnC,EAAMkC,KAC1BA,EAAUC,GAGVC,EAAIT,GAAK3B,EAAMoC,GAAKpC,EAAMkC,KAC1BA,EAAUE,GAGVF,IAAYrB,EAAG,CACfZ,EAAWc,KAAK,CAACF,EAAGqB,IACpBjC,EAAWc,KAAK,CAACF,EAAGqB,EAASlC,EAAMkC,GAAUlC,EAAMa,KACnDZ,EAAWc,KAAK,CAACF,EAAGqB,IACpB,IAAIG,EAAErC,EAAMa,GACZb,EAAMa,GAAGb,EAAMkC,GACflC,EAAMkC,GAASG,EAGfP,EAAQ9B,EAAO2B,EAAGO,EAASjC,I,oBChDdqC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACXC,MAAM,IAER,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,yDASNE,GACXC,KAAKC,SAAS,CAACN,MAAOI,EAAMG,OAAOP,U,mCAExBI,GAEX,IACI7C,EADE8C,KAAKN,MAAMC,MAAMQ,QAAQ,MAAM,IACvBC,MAAM,KAAKC,IAAIC,QAC7BN,KAAKP,MAAMc,KAAKrD,GAChB6C,EAAMS,mB,+BAIR,OADEtB,QAAQC,IAAIa,KAAKP,OAEjB,eAACgB,EAAA,EAAD,2BACIT,KAAKP,OADT,IAEEiB,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,MAAO,CAACC,gBAAiB,OAAQC,OAAO,QAAlE,SACE,cAACR,EAAA,EAAMS,MAAP,CAAaC,GAAG,gCAAgCJ,MAAO,CAACK,UAAU,MAAlE,sCAIF,uBAAMC,SAAUrB,KAAKF,aAArB,UACA,cAACW,EAAA,EAAMa,KAAP,CAAYP,MAAO,CAACC,gBAAiB,OAAQC,OAAO,QAApD,SACE,uBAAOM,KAAK,OAAOR,MAAO,CAACS,MAAM,yBAA0BP,OAAO,OAAQQ,OAAO,QAAS9B,MAAOK,KAAKN,MAAMC,MAAO+B,SAAU1B,KAAKJ,iBAEpI,cAACa,EAAA,EAAMkB,OAAP,CAAcZ,MAAO,CAACC,gBAAiB,OAAQC,OAAO,QAAtD,SACE,uBAAOM,KAAK,SAASR,MAAO,CAACa,aAAc,MAAQC,QAAS,UAAWC,WAAY,QAASC,QAAS/B,KAAKP,MAAMuC,OAAQrC,MAAM,wB,GAxCjGsC,IAAMC,WCQzCC,G,MAAqB,IAMrBC,EAAgB,YAGhBC,EAAkB,OAElBC,EAAa,MAEIC,E,kDACnB,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXxC,MAAO,GACPsF,WAAW,EACXC,QAAO,EACPC,SAAQ,EACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,WAAW,IACXC,MAAM,QAIR,EAAKC,gBAAkB,EAAKA,gBAAgBpD,KAArB,gBACvB,EAAKqD,gBAAkB,EAAKA,gBAAgBrD,KAArB,gBACvB,EAAKsD,aAAe,EAAKA,aAAatD,KAAlB,gBACpB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKuD,kBAAoB,EAAKA,kBAAkBvD,KAAvB,gBACzB,EAAKwD,YAAc,EAAKA,YAAYxD,KAAjB,gBAEnB,EAAKU,KAAO,EAAKA,KAAKV,KAAV,gBAxBK,E,gEA8BjBG,KAAKsD,aAELtD,KAAKqD,gB,6CAMLrD,KAAKP,MAAM8D,O,mCAIX,IAAIrG,EAAQ,GAEZ,GADA8C,KAAKC,SAAS,CAACwC,QAAO,KAClBzC,KAAKN,MAAM+C,OAAO,CAClBvD,QAAQC,IAAIa,KAAKN,MAAMqD,YACvB,IAAK,IAAIhF,EAAI,EAAGA,EAAIiC,KAAKN,MAAMqD,WAAYhF,IAC3Cb,EAAMe,KAAKuF,EAAsB,GAAIC,OAAOC,YAAY,KAAK,IAE7D1D,KAAKC,SAAS,CAAC/C,UACf8C,KAAKC,SAAS,CAAC0C,OAAOzF,IACtB8C,KAAKC,SAAS,CAAC2C,OAAO1F,IACtB8C,KAAKC,SAAS,CAAC4C,OAAO3F,IACtB8C,KAAKC,SAAS,CAAC6C,OAAO5F,IACtBA,EAAQ,M,2BAITyG,GACH3D,KAAKC,SAAS,CAAC/C,MAAMyG,IAErB3D,KAAKC,SAAS,CAAC0C,OAAOgB,IACtB3D,KAAKC,SAAS,CAAC2C,OAAOe,IACtB3D,KAAKC,SAAS,CAAC4C,OAAOc,IACtB3D,KAAKC,SAAS,CAAC6C,OAAOa,M,kCAUtB,IANA,IAEMC,EAAc3G,EAFV+C,KAAKN,MAAMiD,OAAOrF,SADlB,WAODS,GACP,IAAM8F,EAAYC,SAASC,uBAAuB,cAElD,GADsBhG,EAAI,IAAM,EACb,CAAC,IAAD,cACc6F,EAAY7F,GAD1B,GACViG,EADU,KACCC,EADD,KAEXC,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnCqD,EAAQrG,EAAI,IAAM,EAAIsE,EAAkBD,EAC9CiC,YAAW,WACTH,EAAYlD,gBAAkBoD,EAC9BD,EAAYnD,gBAAkBoD,IAC7BrG,EAAIoE,QAEPkC,YAAW,WAAO,IAAD,cACgBT,EAAY7F,GAD5B,GACRiG,EADQ,KACGM,EADH,KAEKT,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwB6C,EAAxB,QACCvG,EAAIoE,IAjBFpE,EAAI,EAAGA,EAAI6F,EAAYxG,OAAQW,IAAM,EAArCA,K,kCA+BT,IAPA,IAEMwG,EAAcpG,EAFV6B,KAAKN,MAAMkD,OAAOtF,SADlB,WAQDS,GAEL,IAAM8F,EAAYC,SAASC,uBAAuB,cAElD,GADsBhG,EAAI,IAAM,EAE5B,GAAGA,EAAE,IAAI,EAAE,CAAC,IAAD,cACkCwG,EAAYxG,GAD9C,GACAiG,EADA,KACWC,EADX,KACsBO,EADtB,KAGDN,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnC0D,EAAgBZ,EAAUW,GAAUzD,MAG1CsD,YAAW,WAEXH,EAAYlD,gBAAkBqB,EAC9B8B,EAAYnD,gBAAkBqB,EAC9BoC,EAAczD,gBAAkBsB,IAC7BvE,EAAIoE,OAGP,CAAC,IAAD,cAEyCoC,EAAYxG,GAFrD,GAEOiG,EAFP,KAEkBC,EAFlB,KAE6BO,EAF7B,KAIMN,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnC0D,EAAgBZ,EAAUW,GAAUzD,MAG1CsD,YAAW,WAEXH,EAAYlD,gBAAkBoB,EAC9B+B,EAAYnD,gBAAkBoB,EAC9BqC,EAAczD,gBAAkBoB,IAC7BrE,EAAIoE,QAIXkC,YAAW,WAEX,GAA2B,IAAxBE,EAAYxG,GAAGX,OAAW,CAAC,IAAD,cAC8BmH,EAAYxG,GAD1C,GAClBiG,EADkB,KACPC,EADO,KACIS,EADJ,KACgBC,EADhB,KAGLd,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwBkD,EAAxB,MAEoBd,EAAUI,GAAWlD,MAC7BU,OAAZ,UAAwBiD,EAAxB,SAED3G,EAAIoE,IAlDNpE,EAAI,EAAGA,EAAIwG,EAAYnH,OAAQW,IAAM,EAArCA,K,iCAgET,IANA,IAEM6G,EAAc7F,EAFViB,KAAKN,MAAMmD,OAAOvF,SADnB,WAOAS,GACL,IAAM8F,EAAYC,SAASC,uBAAuB,cAElD,GADsBhG,EAAI,IAAM,EACd,CAAC,IAAD,cACiB6G,EAAY7G,GAD7B,GACPiG,EADO,KACIC,EADJ,KAERC,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnCqD,EAAQrG,EAAI,IAAM,EAAIsE,EAAkBD,EAC9CiC,YAAW,WACXH,EAAYlD,gBAAkBoD,EAC9BD,EAAYnD,gBAAkBoD,IAC3BrG,EAAIoE,QAGPkC,YAAW,WAEP,GAA2B,IAAxBO,EAAY7G,GAAGX,OAAW,CAAC,IAAD,cAC8BwH,EAAY7G,GAD1C,GAClBiG,EADkB,KACPC,EADO,KACIS,EADJ,KACgBC,EADhB,KAGLd,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwBkD,EAAxB,MAEoBd,EAAUI,GAAWlD,MAC7BU,OAAZ,UAAwBiD,EAAxB,SAED3G,EAAIoE,IAzBVpE,EAAI,EAAGA,EAAI6G,EAAYxH,OAAQW,IAAM,EAArCA,K,mCAuCT,IAPA,IAEMZ,EAAayB,EAFToB,KAAKN,MAAMoD,OAAOxF,SADjB,WAQFS,GACL,IAAM8F,EAAYC,SAASC,uBAAuB,cAElD,GADsBhG,EAAI,IAAM,EACd,CAAC,IAAD,cACiBZ,EAAWY,GAD5B,GACPiG,EADO,KACIC,EADJ,KAERC,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnCqD,EAAQrG,EAAI,IAAM,EAAIsE,EAAkBD,EAC9CiC,YAAW,WACXH,EAAYlD,gBAAkBoD,EAC9BD,EAAYnD,gBAAkBoD,IAC3BrG,EAAIoE,QAGPkC,YAAW,WAEP,GAA0B,IAAvBlH,EAAWY,GAAGX,OAAW,CAAC,IAAD,cAC+BD,EAAWY,GAD1C,GACjBiG,EADiB,KACNC,EADM,KACKS,EADL,KACiBC,EADjB,KAGJd,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwBkD,EAAxB,MAEoBd,EAAUI,GAAWlD,MAC7BU,OAAZ,UAAwBiD,EAAxB,SAED3G,EAAIoE,IAzBVpE,EAAI,EAAGA,EAAIZ,EAAWC,OAAQW,IAAM,EAApCA,K,8CAmCT,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAG5B,IAFA,IAAMb,EAAQ,GACRE,EAASoG,EAAsB,EAAG,KAC/BzF,EAAI,EAAGA,EAAIX,EAAQW,IAC1Bb,EAAMe,KAAKuF,GAAuB,IAAM,MAE1C,IAAMqB,EAAwB3H,EAAMI,QAAQwH,MAAK,SAACpG,EAAGa,GAAJ,OAAUb,EAAIa,KACzDwF,EAAmB9H,EAAuBC,EAAMI,SACtD4B,QAAQC,IAAI6F,EAAeH,EAAuBE,O,qCAKrD/E,KAAKiF,YACLjF,KAAKkF,YACLlF,KAAKmF,WACLnF,KAAKoF,e,wCAIJpF,KAAKC,SAAS,CAACwC,QAAO,IACtBzC,KAAKC,SAAS,CAACuC,WAAW,M,wCAI1BxC,KAAKC,SAAS,CAACuC,WAAW,M,mCAEfzC,GAAO,IAAD,OACnBC,KAAKC,SAAS,CAAC8C,WAAYsC,SAAStF,EAAMG,OAAOP,SAAS,kBAAK,EAAK2D,kB,wCAGlDvD,GAEhBoC,EAAmB,GAAGpC,EAAMG,OAAOP,Q,oCAQnC,GAAqB,QAAlBK,KAAKN,MAAMsD,MACd,CACEc,SAASwB,gBAAgBvE,MAAMC,gBAAgB,QAC/CoB,EAAgB,YAChBC,EAAkB,OAClBC,EAAa,MACbtC,KAAKC,SAAS,CAAC+C,MAAM,UAErB,IADA,IAAIuC,EAAEzB,SAAS0B,qBAAqB,UAC3BzH,EAAI,EAAGA,EAAIwH,EAAEnI,OAAQW,IAC5BwH,EAAExH,GAAGgD,MAAMqD,MAAQ,QACnBmB,EAAExH,GAAGgD,MAAM0E,YAAc,OAI3B,IADIF,EAAEzB,SAAS0B,qBAAqB,KAC3BzH,EAAI,EAAGA,EAAIwH,EAAEnI,OAAQW,IAC5BwH,EAAExH,GAAGgD,MAAMqD,MAAQ,OAGrBN,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,OAC5CN,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,OAE5CN,SAAS4B,eAAe,OAAO3E,MAAMC,gBAAgB,QACrD8C,SAAS4B,eAAe,OAAO3E,MAAMqD,MAAM,WAI7C,CACEN,SAASwB,gBAAgBvE,MAAMC,gBAAgB,UAC/CoB,EAAc,UACdC,EAAkB,MAClBC,EAAa,SACbtC,KAAKC,SAAS,CAAC+C,MAAM,SACrBc,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,QAC5CN,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,QAE5C,IADImB,EAAEzB,SAAS0B,qBAAqB,UAC3BzH,EAAI,EAAGA,EAAIwH,EAAEnI,OAAQW,IAC5BwH,EAAExH,GAAGgD,MAAMqD,MAAQ,QACnBmB,EAAExH,GAAGgD,MAAM0E,YAAc,UAI3B,IADIF,EAAEzB,SAAS0B,qBAAqB,KAC3BzH,EAAI,EAAGA,EAAIwH,EAAEnI,OAAQW,IAC5BwH,EAAExH,GAAGgD,MAAMqD,MAAQ,QAIrBN,SAAS4B,eAAe,OAAO3E,MAAMC,gBAAgB,UACrD8C,SAAS4B,eAAe,OAAO3E,MAAMqD,MAAM,a,+BAMrC,IAAD,OACAzB,EAAU3C,KAAKN,MAAfiD,OACAC,EAAU5C,KAAKN,MAAfkD,OACAC,EAAU7C,KAAKN,MAAfmD,OACAC,EAAU9C,KAAKN,MAAfoD,OAEDzD,EAAIW,KAAKN,MAAMxC,MAAME,OAG3B,OACE,qCACC4C,KAAKN,MAAMgD,SACX,sBAAKiD,UAAU,kBAAf,UACC,mBAAG5E,MAAO,CAACqD,MAAM,OAAQwB,OAAO,SAAhC,wBACCjD,EAAOtC,KAAI,SAACV,EAAOkG,GAAR,OACV,qBACEF,UAAU,aAEV5E,MAAO,CACLC,gBAAiBoB,EACjBX,OAAO,GAAD,OAAK9B,EAAL,MACN6B,MAAM,GAAD,OAAK,GAAGnC,EAAR,KACLuG,OAAO,KAAD,OAAO,GAAGvG,EAAV,OALHwG,EAAI,QAQb,uBACA,mBAAG9E,MAAO,CAACqD,MAAM,OAAQwB,OAAO,SAAhC,wBACChD,EAAOvC,KAAI,SAACV,EAAOkG,GAAR,OACV,qBACEF,UAAU,aAEV5E,MAAO,CACLC,gBAAiBoB,EACjBX,OAAO,GAAD,OAAK9B,EAAL,MACN6B,MAAM,GAAD,OAAK,GAAGnC,EAAR,KACLuG,OAAO,KAAD,OAAO,GAAGvG,EAAV,OALHwG,EAAI,QAQb,uBACA,mBAAG9E,MAAO,CAACqD,MAAM,OAAQwB,OAAO,SAAhC,uBACC/C,EAAOxC,KAAI,SAACV,EAAOkG,GAAR,OACV,qBACEF,UAAU,aAEV5E,MAAO,CACLC,gBAAiBoB,EACjBX,OAAO,GAAD,OAAK9B,EAAL,MACN6B,MAAM,GAAD,OAAK,GAAGnC,EAAR,KACLuG,OAAO,KAAD,OAAO,GAAGvG,EAAV,OALHwG,EAAI,QAQb,uBACA,mBAAG9E,MAAO,CAACqD,MAAM,OAAQwB,OAAO,SAAhC,yBACC9C,EAAOzC,KAAI,SAACV,EAAOkG,GAAR,OACV,qBACEF,UAAU,aAEV5E,MAAO,CACLC,gBAAiBoB,EACjBX,OAAO,GAAD,OAAK9B,EAAL,MACN6B,MAAM,GAAD,OAAK,GAAGnC,EAAR,KACLuG,OAAO,KAAD,OAAO,GAAGvG,EAAV,OALHwG,EAAI,QAQb,uBACA,wBAAQ9D,QAAS,kBAAM,EAAKuB,cAA5B,gCACF,wBAAQvB,QAAS,kBAAM,EAAKkD,aAA5B,wBACA,wBAAQlD,QAAS,kBAAM,EAAKmD,aAA5B,wBACA,wBAAQnD,QAAS,kBAAM,EAAKoD,YAA5B,uBACA,wBAAQpD,QAAS,kBAAM,EAAKqD,cAA5B,yBACA,wBAAQrD,QAAS,kBAAM,EAAKoB,gBAA5B,mBAGA,wBAAQpB,QAAS/B,KAAKiD,gBAAtB,wBACA,wBAAQlB,QAAS,SAAC+D,GAAD,OAAK,EAAKrG,MAAMsG,aAAY,IAA7C,oBACA,wBAAQhE,QAAS/B,KAAKqD,YAAtB,SAAoCrD,KAAKN,MAAMsD,QAE9C,uBAAM,uBACN,sBAAKjC,MAAO,CAACiF,QAAS,eAAtB,UACA,sBAAK7E,GAAG,OAAOJ,MAAO,CAACqD,MAAM,OAAQwB,OAAO,QAA5C,8BAAsE,uBAAOrE,KAAK,SAAS5B,MAAOK,KAAKN,MAAMqD,WAAYrB,SAAU1B,KAAKJ,eAAxI,OACA,sBAAKuB,GAAG,OAAOJ,MAAO,CAACqD,MAAM,OAAQwB,OAAO,QAA5C,+BAAuE,uBAAOrE,KAAK,QAAQ5B,MAAO,KAAMsG,IAAI,IAAIC,IAAI,IAAIxE,SAAU1B,KAAKoD,oBAAvI,aAQApD,KAAKN,MAAM+C,QACV,cAAC,EAAD,CACE0D,KAAMnG,KAAKN,MAAM8C,UACjBR,OAAQhC,KAAKkD,gBACb3C,KAAMP,KAAKO,c,GA9a0B0B,IAAMC,WA2brD,SAASsB,EAAsByC,EAAKC,GAElC,OAAOtI,KAAKC,MAAMD,KAAKwI,UAAYF,EAAMD,EAAM,GAAKA,GAGtD,SAASjB,EAAeqB,EAAUC,GAChC,GAAID,EAASjJ,SAAWkJ,EAASlJ,OAAQ,OAAO,EAChD,IAAK,IAAIW,EAAI,EAAGA,EAAIsI,EAASjJ,OAAQW,IACnC,GAAIsI,EAAStI,KAAOuI,EAASvI,GAC3B,OAAO,EAGX,OAAO,E,YC9cMwI,E,uKAbP,OACI,eAACC,EAAA,EAAD,CAAWrF,GAAG,MAAMwE,UAAU,QAA9B,UACI,+DACA,yHAGA,mBAAGc,KAAK,kEAAR,SACI,qBAAKC,IAAI,qDAAqDC,IAAI,qC,GAT3D1E,IAAMC,WCgB7BE,EAAgB,YAGhBC,EAAkB,OAElBC,EAAa,MAEIsE,E,kDACnB,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXxC,MAAO,GACPsF,WAAW,EACXC,QAAO,EACPC,SAAQ,EACRK,WAAY,IACZ8D,OAAQ,GACR7D,MAAM,QAER,EAAKC,gBAAkB,EAAKA,gBAAgBpD,KAArB,gBACvB,EAAKqD,gBAAkB,EAAKA,gBAAgBrD,KAArB,gBACvB,EAAKkG,YAAc,EAAKA,YAAYlG,KAAjB,gBACnB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKuD,kBAAoB,EAAKA,kBAAkBvD,KAAvB,gBACzB,EAAKwD,YAAc,EAAKA,YAAYxD,KAAjB,gBAGnB,EAAKU,KAAO,EAAKA,KAAKV,KAAV,gBApBK,E,gEA0BjBG,KAAKsD,aACLtD,KAAKqD,gB,mCAKL,IAAMnG,EAAQ,GAEd,GADA8C,KAAKC,SAAS,CAACwC,QAAO,KAClBzC,KAAKN,MAAM+C,OAAO,CACtB,IAAK,IAAI1E,EAAI,EAAGA,EAAIiC,KAAKN,MAAMqD,WAAYhF,IACzCb,EAAMe,KAAKuF,EAAsB,EAAGC,OAAOC,YAAY,MAEzD1D,KAAKC,SAAS,CAAC/C,a,2BAIZyG,GACH3D,KAAKC,SAAS,CAAC/C,MAAMyG,M,kCAIrB,IAFW,IAAD,OACJxG,EAAaF,EAAuB+C,KAAKN,MAAMxC,OAD3C,WAEDa,GACP,IAAM8F,EAAYC,SAASC,uBAAuB,aAElD,GADsBhG,EAAI,IAAM,EACb,CAAC,IAAD,cACcZ,EAAWY,GADzB,GACViG,EADU,KACCC,EADD,KAEXC,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnCqD,EAAQrG,EAAI,IAAM,EAAIsE,EAAkBD,EAC9CiC,YAAW,WACTH,EAAYlD,gBAAkBoD,EAC9BD,EAAYnD,gBAAkBoD,IAC7BrG,EAAI,EAAK2B,MAAMmH,aAElBxC,YAAW,WAAO,IAAD,cACgBlH,EAAWY,GAD3B,GACRiG,EADQ,KACGM,EADH,KAEKT,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwB6C,EAAxB,QACCvG,EAAI,EAAK2B,MAAMmH,SAjBb9I,EAAI,EAAGA,EAAIZ,EAAWC,OAAQW,IAAM,EAApCA,K,kCAyBT,IAHW,IAAD,OACJZ,EAAagB,EAAuB6B,KAAKN,MAAMxC,OAD3C,WAGDa,GAEL,IAAM8F,EAAYC,SAASC,uBAAuB,aAElD,GADsBhG,EAAI,IAAM,EAE5B,GAAGA,EAAE,IAAI,EAAE,CAAC,IAAD,cACkCZ,EAAWY,GAD7C,GACAiG,EADA,KACWC,EADX,KACsBO,EADtB,KAGDN,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnC0D,EAAgBZ,EAAUW,GAAUzD,MAG1CsD,YAAW,WAEXH,EAAYlD,gBAAkBqB,EAC9B8B,EAAYnD,gBAAkBqB,EAC9BoC,EAAczD,gBAAkBsB,IAC7BvE,EAAI,EAAK2B,MAAMmH,YAGlB,CAAC,IAAD,cAEyC1J,EAAWY,GAFpD,GAEOiG,EAFP,KAEkBC,EAFlB,KAE6BO,EAF7B,KAIMN,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnC0D,EAAgBZ,EAAUW,GAAUzD,MAG1CsD,YAAW,WAEXH,EAAYlD,gBAAkBoB,EAC9B+B,EAAYnD,gBAAkBoB,EAC9BqC,EAAczD,gBAAkBoB,IAC7BrE,EAAI,EAAK2B,MAAMmH,aAItBxC,YAAW,WAEX,GAA0B,IAAvBlH,EAAWY,GAAGX,OAAW,CAAC,IAAD,cAC+BD,EAAWY,GAD1C,GACjBiG,EADiB,KACNC,EADM,KACKS,EADL,KACiBC,EADjB,KAGJd,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwBkD,EAAxB,MAEoBd,EAAUI,GAAWlD,MAC7BU,OAAZ,UAAwBiD,EAAxB,SAED3G,EAAI,EAAK2B,MAAMmH,SAlDjB9I,EAAI,EAAGA,EAAIZ,EAAWC,OAAQW,IAAM,EAApCA,K,iCA6DT,IAJU,IAAD,OAEHZ,EAAa4B,EAAsBiB,KAAKN,MAAMxC,OAF3C,WAIAa,GACL,IAAM8F,EAAYC,SAASC,uBAAuB,aAElD,GADsBhG,EAAI,IAAM,EACd,CAAC,IAAD,cACiBZ,EAAWY,GAD5B,GACPiG,EADO,KACIC,EADJ,KAERC,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnCqD,EAAQrG,EAAI,IAAM,EAAIsE,EAAkBD,EAC9CiC,YAAW,WACXH,EAAYlD,gBAAkBoD,EAC9BD,EAAYnD,gBAAkBoD,IAC3BrG,EAAI,EAAK2B,MAAMmH,aAGlBxC,YAAW,WAEP,GAA0B,IAAvBlH,EAAWY,GAAGX,OAAW,CAAC,IAAD,cAC+BD,EAAWY,GAD1C,GACjBiG,EADiB,KACNC,EADM,KACKS,EADL,KACiBC,EADjB,KAGJd,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwBkD,EAAxB,MAEoBd,EAAUI,GAAWlD,MAC7BU,OAAZ,UAAwBiD,EAAxB,SAED3G,EAAI,EAAK2B,MAAMmH,SAzBrB9I,EAAI,EAAGA,EAAIZ,EAAWC,OAAQW,IAAM,EAApCA,K,mCAiCT,IAHY,IAAD,OACLZ,EAAayB,EAAwBoB,KAAKN,MAAMxC,OAD3C,WAGFa,GACL,IAAM8F,EAAYC,SAASC,uBAAuB,aAElD,GADsBhG,EAAI,IAAM,EACd,CAAC,IAAD,cACiBZ,EAAWY,GAD5B,GACPiG,EADO,KACIC,EADJ,KAERC,EAAcL,EAAUG,GAAWjD,MACnCoD,EAAcN,EAAUI,GAAWlD,MACnCqD,EAAQrG,EAAI,IAAM,EAAIsE,EAAkBD,EAC9CiC,YAAW,WACXH,EAAYlD,gBAAkBoD,EAC9BD,EAAYnD,gBAAkBoD,IAC3BrG,EAAI,EAAK2B,MAAMmH,aAGlBxC,YAAW,WAEP,GAA0B,IAAvBlH,EAAWY,GAAGX,OAAW,CAAC,IAAD,cAC+BD,EAAWY,GAD1C,GACjBiG,EADiB,KACNC,EADM,KACKS,EADL,KACiBC,EADjB,KAGJd,EAAUG,GAAWjD,MAC7BU,OAAZ,UAAwBkD,EAAxB,MAEoBd,EAAUI,GAAWlD,MAC7BU,OAAZ,UAAwBiD,EAAxB,SAED3G,EAAI,EAAK2B,MAAMmH,SAzBrB9I,EAAI,EAAGA,EAAIZ,EAAWC,OAAQW,IAAM,EAApCA,K,8CAmCT,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAG5B,IAFA,IAAMb,EAAQ,GACRE,EAASoG,EAAsB,EAAG,KAC/BzF,EAAI,EAAGA,EAAIX,EAAQW,IAC1Bb,EAAMe,KAAKuF,GAAuB,IAAM,MAE1C,IAAMqB,EAAwB3H,EAAMI,QAAQwH,MAAK,SAACpG,EAAGa,GAAJ,OAAUb,EAAIa,KACzDwF,EAAmB9H,EAAuBC,EAAMI,SACtD4B,QAAQC,IAAI6F,EAAeH,EAAuBE,O,kCAI1Ce,GACV9F,KAAKC,SAAS,CAACyC,QAAQoD,M,wCAIvB9F,KAAKC,SAAS,CAACwC,QAAO,IACtBzC,KAAKC,SAAS,CAACuC,WAAW,M,wCAI1BxC,KAAKC,SAAS,CAACuC,WAAW,M,mCAEfzC,GAAO,IAAD,OACjBC,KAAKC,SAAS,CAAC8C,WAAYsC,SAAStF,EAAMG,OAAOP,SAAS,kBAAK,EAAK2D,kB,wCAGpDvD,GAChBC,KAAKC,UAAS,iBAAK,CAAC4G,OAAQ,GAAG9G,EAAMG,OAAOP,Y,oCAO5C,GAAqB,QAAlBK,KAAKN,MAAMsD,MACd,CACEc,SAASwB,gBAAgBvE,MAAMC,gBAAgB,QAC/CoB,EAAgB,YAChBC,EAAkB,OAClBC,EAAa,MACbtC,KAAKC,SAAS,CAAC+C,MAAM,UAErB,IADA,IAAIuC,EAAEzB,SAAS0B,qBAAqB,UAC3BzH,EAAI,EAAGA,EAAIwH,EAAEnI,OAAQW,IAC5BwH,EAAExH,GAAGgD,MAAMqD,MAAQ,QACnBmB,EAAExH,GAAGgD,MAAM0E,YAAc,OAG3B3B,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,OAC5CN,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,OAC5CN,SAAS4B,eAAe,OAAO3E,MAAMC,gBAAgB,QACrD8C,SAAS4B,eAAe,OAAO3E,MAAMqD,MAAM,WAM7C,CACEN,SAASwB,gBAAgBvE,MAAMC,gBAAgB,UAC/CoB,EAAc,UACdC,EAAkB,MAClBC,EAAa,SACbtC,KAAKC,SAAS,CAAC+C,MAAM,SACrBc,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,QAC5CN,SAAS4B,eAAe,QAAQ3E,MAAMqD,MAAM,QAC5CN,SAAS4B,eAAe,OAAO3E,MAAMC,gBAAgB,UACrD8C,SAAS4B,eAAe,OAAO3E,MAAMqD,MAAM,UAG3C,IADImB,EAAEzB,SAAS0B,qBAAqB,UAC3BzH,EAAI,EAAGA,EAAIwH,EAAEnI,OAAQW,IAC5BwH,EAAExH,GAAGgD,MAAMqD,MAAQ,QACnBmB,EAAExH,GAAGgD,MAAM0E,YAAc,a,+BAQrB,IAAD,OACAvI,EAAS8C,KAAKN,MAAdxC,MACDmC,EAAIW,KAAKN,MAAMxC,MAAME,OAG3B,OACE,qCACA,cAAC,EAAD,KACE4C,KAAKN,MAAMgD,SACZ,sBAAKiD,UAAU,kBAAf,UACEzI,EAAMmD,KAAI,SAACV,EAAOkG,GAAR,OACT,qBACEF,UAAU,YAEV5E,MAAO,CACLC,gBAAiBoB,EACjBX,OAAO,GAAD,OAAK9B,EAAL,MACN6B,MAAM,GAAD,OAAK,GAAGnC,EAAR,KACLuG,OAAO,KAAD,OAAO,GAAGvG,EAAV,OALHwG,MAQT,uBACA,wBAAQ9D,QAAS,kBAAM,EAAKuB,cAA5B,gCACF,wBAAQvB,QAAS,kBAAM,EAAKkD,aAA5B,wBACA,wBAAQlD,QAAS,kBAAM,EAAKmD,aAA5B,wBACA,wBAAQnD,QAAS,kBAAM,EAAKoD,YAA5B,uBACA,wBAAQpD,QAAS,kBAAM,EAAKqD,cAA5B,yBAEA,wBAAQrD,QAAS/B,KAAKiD,gBAAtB,wBACA,wBAAQlB,QAAS,SAAC+D,GAAD,OAAK,EAAKC,aAAY,IAAvC,qBACA,wBAAQhE,QAAS/B,KAAKqD,YAAtB,SAAoCrD,KAAKN,MAAMsD,QAE/C,sBAAKjC,MAAO,CAACiF,QAAS,eAAtB,UACC,sBAAK7E,GAAG,OAAOJ,MAAO,CAACqD,MAAM,OAAQwB,OAAO,QAA5C,8BAAsE,uBAAOrE,KAAK,SAAS5B,MAAOK,KAAKN,MAAMqD,WAAYrB,SAAU1B,KAAKJ,eAAxI,OACA,sBAAKuB,GAAG,OAAOJ,MAAO,CAACqD,MAAM,OAAQwB,OAAO,QAA5C,+BAAuE,uBAAOrE,KAAK,QAAQ5B,MAAO,KAAMsG,IAAI,IAAIC,IAAI,IAAIxE,SAAU1B,KAAKoD,oBAAvI,aAMDpD,KAAKN,MAAMgD,SACT,cAAC,EAAD,CACEA,QAAS1C,KAAKN,MAAMgD,QACpBqD,YAAa/F,KAAK+F,YAClBxC,GAAIvD,KAAKqD,cAKZrD,KAAKN,MAAM+C,QACV,cAAC,EAAD,CACE0D,KAAMnG,KAAKN,MAAM8C,UACjBR,OAAQhC,KAAKkD,gBACb3C,KAAMP,KAAKO,c,GA/U0B0B,IAAMC,WA4VrD,SAASsB,EAAsByC,EAAKC,GAElC,OAAOtI,KAAKC,MAAMD,KAAKwI,UAAYF,EAAMD,EAAM,GAAKA,GAGtD,SAASjB,EAAeqB,EAAUC,GAChC,GAAID,EAASjJ,SAAWkJ,EAASlJ,OAAQ,OAAO,EAChD,IAAK,IAAIW,EAAI,EAAGA,EAAIsI,EAASjJ,OAAQW,IACnC,GAAIsI,EAAStI,KAAOuI,EAASvI,GAC3B,OAAO,EAGX,OAAO,E,MCvXM+I,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5D,SAAS4B,eAAe,SAM1BqB,M","file":"static/js/main.992de0a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, j]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, i]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, i]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([j, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([j, j]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }","export function getQuickSortAnimations(array) {\r\n    const animations=[];\r\n    if(array.length <= 1) return array;\r\n    quickSortHelper(array, 0, array.length-1, animations);\r\n    return animations;\r\n}\r\n\r\nfunction quickSortHelper(array,left,right,animations){\r\n    if(right-left <= 0) return;\r\n    else{\r\n        let pivot=array[right];\r\n        let partition=partitionFunc(array, left, right, pivot, animations);\r\n        quickSortHelper(array, left, partition-1, animations);\r\n        quickSortHelper(array, partition+1, right, animations);\r\n    }\r\n}\r\n\r\nfunction partitionFunc(array, left, right, pivot, animations){\r\n  \r\n    \r\n    let i = (left - 1);  // Index of smaller element\r\n    let j = left;\r\n    let p=0;\r\n    for (j = left; j <= right- 1; j++)\r\n    {\r\n       \r\n        animations.push([i+1,j,right]); //for color change\r\n        // If current element is smaller than the pivot\r\n        p = i+1;\r\n        \r\n        if (array[j] < pivot)\r\n        {\r\n            i++;    // increment index of smaller element\r\n            let a = array[i];\r\n            array[i] = array[j];\r\n            array[j] = a;\r\n            animations.push([i, j, array[j], array[i]]); //for swapping\r\n           \r\n        }\r\n        else animations.push([]);\r\n        animations.push([p,j,right]); //for reverting color\r\n    }\r\n    let a = array[i + 1];\r\n    array[i+1] = array[right];\r\n    array[right] = a;\r\n    animations.push([i+1, i+1, right]);\r\n    animations.push([i+1, right, array[right], array[i+1]]);\r\n    animations.push([i+1, i+1, right]);\r\n\r\n\r\n    return (i + 1)\r\n\r\n}","export function getBubbleSortAnimations(array){\r\n    const animations=[];\r\n    if(array.length <= 1) return array;\r\n    bubbleSortHelper(array, array.length, animations);\r\n    return animations;\r\n}\r\n\r\nfunction bubbleSortHelper(array, n, animations){\r\n    let i=0;\r\n    let j=0; \r\n\r\n    for (i = 0; i < n-1; i++)       \r\n    {\r\n        for (j = 0; j < n-i-1; j++)  \r\n        {\r\n            animations.push([j,j+1]); //for color change\r\n\r\n            if (array[j] > array[j+1]) \r\n            {\r\n                let a=array[j];\r\n                array[j]=array[j+1];\r\n                array[j+1]=a;\r\n                animations.push([j,j+1,array[j+1],array[j]]); //for swapping\r\n            }\r\n            else animations.push([]);\r\n\r\n            animations.push([j,j+1]); //for reverting the color\r\n        }\r\n    }\r\n}","export function getHeapSortAnimations(array) {\r\n    const animations=[];\r\n    if(array.length <= 1) return array;\r\n    heapSortHelper(array, animations);\r\n    console.log(array);\r\n    return animations;\r\n}\r\n\r\nfunction heapSortHelper(array, animations){\r\n    let i;\r\n    let n=array.length;\r\n    for (i = n / 2 - 1; i >= 0; i--)\r\n        heapify(array, array.length, i, animations);\r\n \r\n    // One by one extract an element from heap\r\n    for (i = n - 1; i > 0; i--) {\r\n        // Move current root to end\r\n        animations.push([0, i]); \r\n        let a=array[0];\r\n        array[0]=array[i];\r\n        array[i]=a;\r\n        animations.push([0, i, array[i], array[0]]); \r\n        animations.push([0, i]); \r\n\r\n        // call max heapify on the reduced heap\r\n        heapify(array, i, 0, animations);\r\n    }\r\n}\r\n\r\nfunction heapify(array, n, i,animations){\r\n    \r\n    let largest = i; // Initialize largest as root\r\n    let l = 2 * i + 1; // left = 2*i + 1\r\n    let r = 2 * i + 2; // right = 2*i + 2\r\n \r\n    // If left child is larger than root\r\n    if (l < n && array[l] > array[largest])\r\n        largest = l;\r\n \r\n    // If right child is larger than largest so far\r\n    if (r < n && array[r] > array[largest])\r\n        largest = r;\r\n \r\n    // If largest is not root\r\n    if (largest !== i) {\r\n        animations.push([i, largest]); \r\n        animations.push([i, largest, array[largest], array[i]]); \r\n        animations.push([i, largest]); \r\n        let b=array[i];\r\n        array[i]=array[largest];\r\n        array[largest]=b;\r\n \r\n        // Recursively heapify the affected sub-tree\r\n        heapify(array, n, largest, animations);\r\n    }\r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class UserInput extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          value:'',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    handleChange(event){\r\n      this.setState({value: event.target.value});\r\n    }\r\n    handleSubmit(event){\r\n\r\n      var a=this.state.value.replace(/\\s/g,'');\r\n      var array = a.split(',').map(Number);\r\n      this.props.user(array);\r\n      event.preventDefault();\r\n    }\r\n    render() {\r\n      console.log(this.props);\r\n    return (\r\n      <Modal\r\n      {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton style={{backgroundColor: \"aqua\", border:\"none\"}}>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\" style={{marginTop:\"2%\"}}>\r\n            Provide Input Elements\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={this.handleSubmit}>\r\n        <Modal.Body style={{backgroundColor: \"aqua\", border:\"none\"}}>\r\n          <input type=\"text\" style={{width:\"-webkit-fill-available\", border:\"none\", height:\"50px\"}} value={this.state.value} onChange={this.handleChange} />\r\n        </Modal.Body>\r\n        <Modal.Footer style={{backgroundColor: \"aqua\", border:\"none\"}}>\r\n          <input type=\"submit\" style={{borderRadius: \"5px\",  padding: \"inherit\", background: \"none\"}} onClick={this.props.onHide} value=\"Submit\"/>\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    );\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport {getMergeSortAnimations} from '../SortingAlgorithm/SortingAlgorithm.js';\r\nimport {getQuickSortAnimations} from '../SortingAlgorithm/QuickSort.js';\r\nimport {getBubbleSortAnimations} from '../SortingAlgorithm/BubbleSort.js';\r\nimport {getHeapSortAnimations} from '../SortingAlgorithm/HeapSort.js';\r\n\r\nimport UserInput from './UserInput';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport './SortingVisualizer.css';\r\n\r\n// Change this value for the speed of the animations.\r\nvar ANIMATION_SPEED_MS = 10;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\n//var NUMBER_OF_ARRAY_BARS = 250;\r\n\r\n// This is the main color of the array bars.\r\nvar PRIMARY_COLOR = 'turquoise';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nvar SECONDARY_COLOR = 'gold';\r\n\r\nvar PIVOTCOLOR = \"red\";\r\n\r\nexport default class CompareVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n      modalshow: false,\r\n      userip:false,\r\n      compare:true,\r\n      array1: [],\r\n      array2: [],\r\n      array3: [],\r\n      array4: [],\r\n      narraybars:250,\r\n      theme:\"Dark\"\r\n    //  sarray:10\r\n\r\n    };\r\n    this.modalShowtoggle = this.modalShowtoggle.bind(this);\r\n    this.modalHidetoggle = this.modalHidetoggle.bind(this);\r\n    this.startCompare = this.startCompare.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSpeedChange = this.handleSpeedChange.bind(this);\r\n    this.themechange = this.themechange.bind(this);\r\n\r\n    this.user = this.user.bind(this);\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n    //document.getElementById('yut').style.backgroundColor=\"black\";\r\n    this.themechange();\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n \r\n    //document.getElementById('yut').style.backgroundColor=\"black\";\r\n    this.props.th();\r\n  }\r\n\r\n  resetArray() {\r\n    var array = [];\r\n    this.setState({userip:false});\r\n    if(!this.state.userip){\r\n        console.log(this.state.narraybars);\r\n        for (let i = 0; i < this.state.narraybars; i++) {\r\n        array.push(randomIntFromInterval(5, (window.innerHeight-450)/4));\r\n        }\r\n        this.setState({array});\r\n        this.setState({array1:array});\r\n        this.setState({array2:array});\r\n        this.setState({array3:array});\r\n        this.setState({array4:array});\r\n        array = [];\r\n  }\r\n  }\r\n\r\n  user(arrayy){\r\n    this.setState({array:arrayy});\r\n    \r\n    this.setState({array1:arrayy});\r\n    this.setState({array2:arrayy});\r\n    this.setState({array3:arrayy});\r\n    this.setState({array4:arrayy});\r\n\r\n  }\r\n  mergeSort() {\r\n    var arr = this.state.array1.slice();\r\n  \r\n    const animations1 = getMergeSortAnimations(arr);\r\n    \r\n    \r\n\r\n    for (let i = 0; i < animations1.length; i++) {\r\n      const arrayBars = document.getElementsByClassName('array-bar1');\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations1[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations1[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n   // this.setState({array1:arr});\r\n  }\r\n\r\n  quickSort() {\r\n    var arr = this.state.array2.slice();\r\n\r\n    const animations2 = getQuickSortAnimations(arr);\r\n\r\n    \r\n\r\n\r\n    for (let i = 0; i < animations2.length; i++) {\r\n        //console.log(i+1);\r\n        const arrayBars = document.getElementsByClassName('array-bar2');\r\n        const isColorChange = i % 3 !== 1;\r\n        if(isColorChange) {\r\n            if(i%3===0){\r\n                const [barOneIdx, barTwoIdx, pivotidx] = animations2[i];\r\n               \r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const pivotidxStyle = arrayBars[pivotidx].style;\r\n\r\n                //const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                \r\n                barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n                barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n                pivotidxStyle.backgroundColor = PIVOTCOLOR;\r\n                }, i * ANIMATION_SPEED_MS);\r\n\r\n            }\r\n            else{\r\n                \r\n                const [barOneIdx, barTwoIdx, pivotidx] = animations2[i];\r\n                \r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const pivotidxStyle = arrayBars[pivotidx].style;\r\n\r\n                //const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n               \r\n                barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n                pivotidxStyle.backgroundColor = PRIMARY_COLOR;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n            \r\n            if(animations2[i].length!==0){\r\n                const [barOneIdx, barTwoIdx, new1height, new2height] = animations2[i];\r\n\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                barOneStyle.height = `${new2height}px`;\r\n\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                barTwoStyle.height = `${new1height}px`;\r\n            }\r\n            }, i * ANIMATION_SPEED_MS);\r\n        \r\n        }\r\n      }\r\n     // this.setState({array2:arr});\r\n  }\r\n\r\n  heapSort() {\r\n    var arr = this.state.array3.slice();\r\n\r\n    const animations3 = getHeapSortAnimations(arr);\r\n\r\n    \r\n\r\n    for (let i = 0; i < animations3.length; i++) {\r\n        const arrayBars = document.getElementsByClassName('array-bar3');\r\n        const isColorChange = i % 3 !== 1;\r\n        if(isColorChange) {\r\n            const [barOneIdx, barTwoIdx] = animations3[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            setTimeout(() => {\r\n            barOneStyle.backgroundColor = color;\r\n            barTwoStyle.backgroundColor = color;\r\n            }, i * ANIMATION_SPEED_MS);\r\n        }\r\n        else{\r\n            setTimeout(() => {\r\n            \r\n                if(animations3[i].length!==0){\r\n                    const [barOneIdx, barTwoIdx, new1height, new2height] = animations3[i];\r\n    \r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${new2height}px`;\r\n    \r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    barTwoStyle.height = `${new1height}px`;\r\n                }\r\n                }, i * ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n   // this.setState({array3:arr}); \r\n  }\r\n\r\n  bubbleSort() {\r\n    var arr = this.state.array4.slice();\r\n\r\n    const animations = getBubbleSortAnimations(arr);\r\n\r\n    \r\n\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n        const arrayBars = document.getElementsByClassName('array-bar4');\r\n        const isColorChange = i % 3 !== 1;\r\n        if(isColorChange) {\r\n            const [barOneIdx, barTwoIdx] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            setTimeout(() => {\r\n            barOneStyle.backgroundColor = color;\r\n            barTwoStyle.backgroundColor = color;\r\n            }, i * ANIMATION_SPEED_MS);\r\n        }\r\n        else{\r\n            setTimeout(() => {\r\n            \r\n                if(animations[i].length!==0){\r\n                    const [barOneIdx, barTwoIdx, new1height, new2height] = animations[i];\r\n    \r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${new2height}px`;\r\n    \r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    barTwoStyle.height = `${new1height}px`;\r\n                }\r\n                }, i * ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n    //this.setState({array4:arr}); \r\n  }\r\n\r\n  // NOTE: This method will only work if your sorting algorithms actually return\r\n  // the sorted arrays; if they return the animations (as they currently do), then\r\n  // this method will be broken.\r\n  testSortingAlgorithms() {\r\n    for (let i = 0; i < 100; i++) {\r\n      const array = [];\r\n      const length = randomIntFromInterval(1, 1000);\r\n      for (let i = 0; i < length; i++) {\r\n        array.push(randomIntFromInterval(-1000, 1000));\r\n      }\r\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n      const mergeSortedArray = getMergeSortAnimations(array.slice());\r\n      console.log(arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\r\n    }\r\n  }\r\n\r\n  startCompare(){\r\n   this.mergeSort();\r\n   this.quickSort();\r\n   this.heapSort();\r\n   this.bubbleSort();\r\n  }\r\n  modalShowtoggle(){\r\n    //e.preventDefault();\r\n    this.setState({userip:true})\r\n    this.setState({modalshow: true});\r\n  }\r\n  modalHidetoggle(){\r\n    //e.preventDefault();\r\n    this.setState({modalshow: false});\r\n  }\r\n  handleChange(event){\r\n  this.setState({narraybars: parseInt(event.target.value)}, ()=> this.resetArray());\r\n  \r\n  }\r\n  handleSpeedChange(event){\r\n    //this.setState(()=>({sarray: 10-event.target.value}));\r\n    ANIMATION_SPEED_MS=10-event.target.value;\r\n    //console.log(ANIMATION_SPEED_MS);\r\n  }\r\n\r\n  \r\n    \r\n  themechange(){\r\n    //e.preventDefault();\r\n    if(this.state.theme==\"Dark\")\r\n    {\r\n      document.documentElement.style.backgroundColor=\"black\";\r\n      PRIMARY_COLOR = 'turquoise';\r\n      SECONDARY_COLOR = \"gold\";\r\n      PIVOTCOLOR = \"red\";\r\n      this.setState({theme:\"Light\"});\r\n      var y=document.getElementsByTagName('button');\r\n      for (var i = 0; i < y.length; i++) {\r\n        y[i].style.color = \"white\";\r\n        y[i].style.borderColor = \"gold\";\r\n\r\n      }\r\n      var y=document.getElementsByTagName('p');\r\n      for (var i = 0; i < y.length; i++) {\r\n        y[i].style.color = \"gold\";\r\n\r\n      }\r\n      document.getElementById('yoiu').style.color=\"gold\";\r\n      document.getElementById('yoiw').style.color=\"gold\";\r\n      \r\n      document.getElementById('yut').style.backgroundColor=\"black\";\r\n      document.getElementById('yut').style.color=\"gold\";\r\n\r\n    }\r\n    else\r\n    {\r\n      document.documentElement.style.backgroundColor=\"#D2D6DB\";\r\n      PRIMARY_COLOR=\"#072F5F\";\r\n      SECONDARY_COLOR = \"red\";\r\n      PIVOTCOLOR = \"yellow\";\r\n      this.setState({theme:\"Dark\"});\r\n      document.getElementById('yoiu').style.color=\"black\";\r\n      document.getElementById('yoiw').style.color=\"black\";\r\n      var y=document.getElementsByTagName('button');\r\n      for (var i = 0; i < y.length; i++) {\r\n        y[i].style.color = \"black\";\r\n        y[i].style.borderColor = \"#072F5F\";\r\n\r\n      }\r\n      var y=document.getElementsByTagName('p');\r\n      for (var i = 0; i < y.length; i++) {\r\n        y[i].style.color = \"black\";\r\n\r\n      }\r\n      \r\n      document.getElementById('yut').style.backgroundColor=\"#D2D6DB\";\r\n      document.getElementById('yut').style.color=\"#072F5F\";\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {array1} = this.state;\r\n    const {array2} = this.state;\r\n    const {array3} = this.state;\r\n    const {array4} = this.state;\r\n\r\n    const l = this.state.array.length;\r\n\r\n    \r\n    return (\r\n      <>\r\n      {this.state.compare &&\r\n       <div className=\"array-container\">\r\n        <p style={{color:\"gold\", margin:\"unset\"}}>Merge Sort</p>\r\n        {array1.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar1\"\r\n            key={idx+\"1\"}\r\n            style={{\r\n              backgroundColor: PRIMARY_COLOR,\r\n              height: `${value}px`,\r\n              width: `${44/l}%`,\r\n              margin: `0 ${22/l}%`\r\n            }}></div>\r\n        ))}\r\n        <br />\r\n        <p style={{color:\"gold\", margin:\"unset\"}}>Quick Sort</p>\r\n        {array2.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar2\"\r\n            key={idx+\"2\"}\r\n            style={{\r\n              backgroundColor: PRIMARY_COLOR,\r\n              height: `${value}px`,\r\n              width: `${44/l}%`,\r\n              margin: `0 ${22/l}%`\r\n            }}></div>\r\n        ))}\r\n        <br />\r\n        <p style={{color:\"gold\", margin:\"unset\"}}>Heap Sort</p>\r\n        {array3.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar3\"\r\n            key={idx+\"3\"}\r\n            style={{\r\n              backgroundColor: PRIMARY_COLOR,\r\n              height: `${value}px`,\r\n              width: `${44/l}%`,\r\n              margin: `0 ${22/l}%`\r\n            }}></div>\r\n        ))}\r\n        <br />\r\n        <p style={{color:\"gold\", margin:\"unset\"}}>Bubble Sort</p>\r\n        {array4.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar4\"\r\n            key={idx+\"4\"}\r\n            style={{\r\n              backgroundColor: PRIMARY_COLOR,\r\n              height: `${value}px`,\r\n              width: `${44/l}%`,\r\n              margin: `0 ${22/l}%`\r\n            }}></div>\r\n        ))}\r\n        <br />\r\n        <button onClick={() => this.resetArray()}>Generate New Array</button>\r\n      <button onClick={() => this.mergeSort()}>Merge Sort</button>\r\n      <button onClick={() => this.quickSort()}>Quick Sort</button>\r\n      <button onClick={() => this.heapSort()}>Heap Sort</button>\r\n      <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n      <button onClick={() => this.startCompare()}>\r\n        Start\r\n      </button>\r\n      <button onClick={this.modalShowtoggle}>User Input</button>\r\n      <button onClick={(t)=>this.props.comparealgo(false)}>Revert</button>\r\n      <button onClick={this.themechange}>{this.state.theme}</button>\r\n\r\n       <br /><br />\r\n       <div style={{display: \"inline-flex\"}}>\r\n       <div id=\"yoiu\" style={{color:\"gold\", margin:\"10px\"}}>Number of Bars:  <input type=\"number\" value={this.state.narraybars} onChange={this.handleChange} /> </div>\r\n       <div id=\"yoiw\" style={{color:\"gold\", margin:\"10px\"}}>Animation Speed:  <input type=\"range\" value={null} min=\"1\" max=\"9\" onChange={this.handleSpeedChange} /> </div>\r\n       </div>\r\n      </div>\r\n    }\r\n\r\n\r\n\r\n\r\n      {this.state.userip &&\r\n        <UserInput\r\n          show={this.state.modalshow}\r\n          onHide={this.modalHidetoggle}\r\n          user={this.user}\r\n        />\r\n      }\r\n     \r\n      \r\n\r\n    </>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}","import React from 'react'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nclass SetJumbotron extends React.Component{\r\n    render(){\r\n        return(\r\n            <Jumbotron id=\"yut\" className=\"jumbo\">\r\n                <h2>Welcome to Sorting Visualizer</h2>\r\n                <h5>\r\n                    Sorting Visualizer is a React application build to visualize various sorting algorithms\r\n                </h5>\r\n                <a href=\"https://github.com/lokeshrbohara/Comparative-Sorting-Visualizer\">\r\n                    <img src=\"https://img.icons8.com/fluent/48/000000/github.png\" alt=\"Go to Github Repository\"/>\r\n                </a>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\nexport default SetJumbotron","import React from 'react';\r\nimport {getMergeSortAnimations} from '../SortingAlgorithm/SortingAlgorithm.js';\r\nimport {getQuickSortAnimations} from '../SortingAlgorithm/QuickSort.js';\r\nimport {getBubbleSortAnimations} from '../SortingAlgorithm/BubbleSort.js';\r\nimport {getHeapSortAnimations} from '../SortingAlgorithm/HeapSort.js';\r\nimport CompareVisualizer from './CompareVisualizer';\r\nimport SetJumbotron from './GetJumbotron';\r\nimport UserInput from './UserInput';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport './SortingVisualizer.css';\r\n\r\n// Change this value for the speed of the animations.\r\nvar ANIMATION_SPEED_MS = 1;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\n//const NUMBER_OF_ARRAY_BARS = 150;\r\n\r\n// This is the main color of the array bars.\r\nvar PRIMARY_COLOR = 'turquoise';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nvar SECONDARY_COLOR = 'gold';\r\n\r\nvar PIVOTCOLOR = \"red\";\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n      modalshow: false,\r\n      userip:false,\r\n      compare:false,\r\n      narraybars: 250,\r\n      sarray: 10,\r\n      theme:\"Dark\"\r\n    };\r\n    this.modalShowtoggle = this.modalShowtoggle.bind(this);\r\n    this.modalHidetoggle = this.modalHidetoggle.bind(this);\r\n    this.comparealgo = this.comparealgo.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSpeedChange = this.handleSpeedChange.bind(this);\r\n    this.themechange = this.themechange.bind(this);\r\n\r\n    \r\n    this.user = this.user.bind(this);\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n    this.themechange();\r\n    //document.getElementById('yut').style.backgroundColor=\"black\";\r\n  }\r\n \r\n  resetArray() {\r\n    const array = [];\r\n    this.setState({userip:false});\r\n    if(!this.state.userip){\r\n    for (let i = 0; i < this.state.narraybars; i++) {\r\n      array.push(randomIntFromInterval(5, window.innerHeight-350));\r\n    }\r\n    this.setState({array});\r\n  }\r\n  }\r\n\r\n  user(arrayy){\r\n    this.setState({array:arrayy});\r\n  }\r\n  mergeSort() {\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.sarray);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * this.state.sarray);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n    const animations = getQuickSortAnimations(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n        //console.log(i+1);\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        const isColorChange = i % 3 !== 1;\r\n        if(isColorChange) {\r\n            if(i%3===0){\r\n                const [barOneIdx, barTwoIdx, pivotidx] = animations[i];\r\n               \r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const pivotidxStyle = arrayBars[pivotidx].style;\r\n\r\n                //const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                \r\n                barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n                barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n                pivotidxStyle.backgroundColor = PIVOTCOLOR;\r\n                }, i * this.state.sarray);\r\n\r\n            }\r\n            else{\r\n                \r\n                const [barOneIdx, barTwoIdx, pivotidx] = animations[i];\r\n                \r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const pivotidxStyle = arrayBars[pivotidx].style;\r\n\r\n                //const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n               \r\n                barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n                pivotidxStyle.backgroundColor = PRIMARY_COLOR;\r\n                }, i * this.state.sarray);\r\n            }\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n            \r\n            if(animations[i].length!==0){\r\n                const [barOneIdx, barTwoIdx, new1height, new2height] = animations[i];\r\n\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                barOneStyle.height = `${new2height}px`;\r\n\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                barTwoStyle.height = `${new1height}px`;\r\n            }\r\n            }, i * this.state.sarray);\r\n        \r\n        }\r\n      }\r\n    \r\n  }\r\n\r\n  heapSort() {\r\n    // We leave it as an exercise to the viewer of this code to implement this method.\r\n    const animations = getHeapSortAnimations(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        const isColorChange = i % 3 !== 1;\r\n        if(isColorChange) {\r\n            const [barOneIdx, barTwoIdx] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            setTimeout(() => {\r\n            barOneStyle.backgroundColor = color;\r\n            barTwoStyle.backgroundColor = color;\r\n            }, i * this.state.sarray);\r\n        }\r\n        else{\r\n            setTimeout(() => {\r\n            \r\n                if(animations[i].length!==0){\r\n                    const [barOneIdx, barTwoIdx, new1height, new2height] = animations[i];\r\n    \r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${new2height}px`;\r\n    \r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    barTwoStyle.height = `${new1height}px`;\r\n                }\r\n                }, i * this.state.sarray);\r\n        }\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    const animations = getBubbleSortAnimations(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        const isColorChange = i % 3 !== 1;\r\n        if(isColorChange) {\r\n            const [barOneIdx, barTwoIdx] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            setTimeout(() => {\r\n            barOneStyle.backgroundColor = color;\r\n            barTwoStyle.backgroundColor = color;\r\n            }, i * this.state.sarray);\r\n        }\r\n        else{\r\n            setTimeout(() => {\r\n            \r\n                if(animations[i].length!==0){\r\n                    const [barOneIdx, barTwoIdx, new1height, new2height] = animations[i];\r\n    \r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${new2height}px`;\r\n    \r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    barTwoStyle.height = `${new1height}px`;\r\n                }\r\n                }, i * this.state.sarray);\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n  // NOTE: This method will only work if your sorting algorithms actually return\r\n  // the sorted arrays; if they return the animations (as they currently do), then\r\n  // this method will be broken.\r\n  testSortingAlgorithms() {\r\n    for (let i = 0; i < 100; i++) {\r\n      const array = [];\r\n      const length = randomIntFromInterval(1, 1000);\r\n      for (let i = 0; i < length; i++) {\r\n        array.push(randomIntFromInterval(-1000, 1000));\r\n      }\r\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n      const mergeSortedArray = getMergeSortAnimations(array.slice());\r\n      console.log(arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\r\n    }\r\n  }\r\n\r\n  comparealgo(t){\r\n    this.setState({compare:t});\r\n  }\r\n  modalShowtoggle(){\r\n    //e.preventDefault();\r\n    this.setState({userip:true})\r\n    this.setState({modalshow: true});\r\n  }\r\n  modalHidetoggle(){\r\n    //e.preventDefault();\r\n    this.setState({modalshow: false});\r\n  }\r\n  handleChange(event){\r\n    this.setState({narraybars: parseInt(event.target.value)}, ()=> this.resetArray());\r\n    \r\n  }\r\n  handleSpeedChange(event){\r\n    this.setState(()=>({sarray: 10-event.target.value}));\r\n    //ANIMATION_SPEED_MS=10-event.target.value;\r\n    //console.log(ANIMATION_SPEED_MS);\r\n    }\r\n\r\n  themechange(){\r\n    //e.preventDefault();\r\n    if(this.state.theme==\"Dark\")\r\n    {\r\n      document.documentElement.style.backgroundColor=\"black\";\r\n      PRIMARY_COLOR = 'turquoise';\r\n      SECONDARY_COLOR = \"gold\";\r\n      PIVOTCOLOR = \"red\";\r\n      this.setState({theme:\"Light\"});\r\n      var y=document.getElementsByTagName('button');\r\n      for (var i = 0; i < y.length; i++) {\r\n        y[i].style.color = \"white\";\r\n        y[i].style.borderColor = \"gold\";\r\n\r\n      }\r\n      document.getElementById('yoiu').style.color=\"gold\";\r\n      document.getElementById('yoiw').style.color=\"gold\";\r\n      document.getElementById('yut').style.backgroundColor=\"black\";\r\n      document.getElementById('yut').style.color=\"gold\";\r\n\r\n\r\n\r\n    }\r\n    else\r\n    {\r\n      document.documentElement.style.backgroundColor=\"#D2D6DB\";\r\n      PRIMARY_COLOR=\"#072F5F\";\r\n      SECONDARY_COLOR = \"red\";\r\n      PIVOTCOLOR = \"yellow\";\r\n      this.setState({theme:\"Dark\"});\r\n      document.getElementById('yoiu').style.color=\"black\";\r\n      document.getElementById('yoiw').style.color=\"black\";\r\n      document.getElementById('yut').style.backgroundColor=\"#D2D6DB\";\r\n      document.getElementById('yut').style.color=\"#072F5F\";\r\n\r\n      var y=document.getElementsByTagName('button');\r\n      for (var i = 0; i < y.length; i++) {\r\n        y[i].style.color = \"black\";\r\n        y[i].style.borderColor = \"#072F5F\";\r\n\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {array} = this.state;\r\n    const l = this.state.array.length;\r\n\r\n    \r\n    return (\r\n      <>\r\n      <SetJumbotron />\r\n      {!this.state.compare &&\r\n       <div className=\"array-container\">\r\n        {array.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{\r\n              backgroundColor: PRIMARY_COLOR,\r\n              height: `${value}px`,\r\n              width: `${44/l}%`,\r\n              margin: `0 ${22/l}%`\r\n            }}></div>\r\n        ))}\r\n        <br />\r\n        <button onClick={() => this.resetArray()}>Generate New Array</button>\r\n      <button onClick={() => this.mergeSort()}>Merge Sort</button>\r\n      <button onClick={() => this.quickSort()}>Quick Sort</button>\r\n      <button onClick={() => this.heapSort()}>Heap Sort</button>\r\n      <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n      \r\n      <button onClick={this.modalShowtoggle}>User Input</button>\r\n      <button onClick={(t)=>this.comparealgo(true)}>Compare</button>\r\n      <button onClick={this.themechange}>{this.state.theme}</button>\r\n\r\n      <div style={{display: \"inline-flex\"}}>\r\n       <div id=\"yoiu\" style={{color:\"gold\", margin:\"10px\"}}>Number of Bars:  <input type=\"number\" value={this.state.narraybars} onChange={this.handleChange} /> </div>\r\n       <div id=\"yoiw\" style={{color:\"gold\", margin:\"10px\"}}>Animation Speed:  <input type=\"range\" value={null} min=\"1\" max=\"9\" onChange={this.handleSpeedChange} /> </div>\r\n       </div>\r\n      </div>\r\n    }\r\n\r\n\r\n     {this.state.compare &&\r\n        <CompareVisualizer\r\n          compare={this.state.compare}\r\n          comparealgo={this.comparealgo}\r\n          th={this.themechange}\r\n        />\r\n      }\r\n\r\n\r\n      {this.state.userip &&\r\n        <UserInput\r\n          show={this.state.modalshow}\r\n          onHide={this.modalHidetoggle}\r\n          user={this.user}\r\n        />\r\n      }\r\n     \r\n      \r\n\r\n    </>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer></SortingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}